/*호이스팅: 함수가 실행되기 전에 안에 있는 변수들을
범위의 최 상단으로 끌어올리는것*/
/*------------------------------------------------------------*/
// console.log(a) //이대로 아래에 a를 선언 함면 undifined라고 나옴
// var a = 1
// console.log(a)
/*------------------------------------------------------------*/
// console.log(a)
// a = 1 
// var a 
// console.log(a)
/*------------------------------------------------------------*/
// javascript는 전역변수와 지역변수의 개념이 확실치 않아요
/*------------------------------------------------------------*/
// var a = 2
// function foo () {
//     var b = 1
// }
// console.log(b)
/*------------------------------------------------------------*/
// for (var i = 1; i < 5; i ++) {
//     console.log(i)
// }
// console.log(i)
/*------------------------------------------------------------*/
// var변수는 함수만 지역변수로 호이스팅이 되고 
// 나머지는 모두 전역변수로 올려버려요
/*------------------------------------------------------------*/
// var a = 1
// console.log(a)
// var a = 2
// console.log(a)
// 보통 같은 변수는 두번 선언하면 에러가 뜨는데
// var로 변수를 같은 변수를 두번 선언하는것도 허용 됨
/*------------------------------------------------------------*/
// let a = 1
// console.log(a)
// let a = 2
// console.log(a)
// let은 이미 한번 선언 했기때문에 두번다시 같은 변수를 선언 못함
/*------------------------------------------------------------*/
// for (let i = 1; i < 5; i ++) {
//     console.log(i)
// }
// console.log(i)
// let로 선언했을때 i는 지역변수로 선언 되였기에
// for을 벗어나면 에레가 나타납니다.
/*------------------------------------------------------------*/
// console.log(a) 
// let a = 1
// console.log(a)
// let도 호이스팅이 됩니다. Temporal Death Zone (TDZ)
// 의미는 a가 호이스팅으로 기억이 된건 알겠어
// 하지만 a 선언문이 나오기 전까지 너는 a 에 접근할수 없어
// 일시적으로 너는 죽은 zone이야
// a의 초기화가 나올때까지는 그 앞에서 얼마나 많이 a를 쓰려고 했던간에
// a가 실제로 선언이 되고 할당이 되기전까지는 a를 쓸수 없음
// 왜냐면 TDZ 일시적 사각지대
/*------------------------------------------------------------*/